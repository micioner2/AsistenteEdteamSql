
---CREACION DE LA BASE DE DATOS bdzapateriaedteam
---�AVISO IMPORTANTE! ----- CREAR UNA CARPETA EL DIRECTORIO 'C:' CON EL NOMBRE 'edteam', Y EJECUTAR EL SCRIPT

USE master			------ USAR LA BASE DE DATOS MASTER
GO
SET NOCOUNT ON		------ NO MOSTRAR MENSAJE DE FILAS AFECTADAS
GO

SET DATEFORMAT DMY  ---- ASIGNAR FORMATO DE LA FECHA DIA, MES Y AÑO
GO

----- SELECCIONAR LOS NOMBRES DE LAS BASES DE DATOS DE SQL SERVER Y COMPROBAR EL NOMBRE DE LA BD, SI EXISTE DENTRO DE LA INSTANCIA DE SQL SERVER 
IF EXISTS (SELECT NAME FROM SYS.DATABASES WHERE NAME='bdzapateriaedteam') 
BEGIN												-----  COMENZAR INSTRUCCION
	 ALTER DATABASE bdzapateriaedteam		
	
	 SET SINGLE_USER WITH ROLLBACK IMMEDIATE		----- SI ALGUN USUARIO ESTA INICIANDO SESION, OBLIGAR A CERRAR INMEDIATAMENTE.
	 
	 DROP DATABASE bdzapateriaedteam				----- ELIMINAR LA BASE DE DATOS
END

----- CREAR LA BD
CREATE DATABASE bdzapateriaedteam 

---CREAR� LAS ESTRUCTURAS EN EL GRUPO DE ARCHIVOS PRIMARIOS.
ON PRIMARY  
	(
		NAME='bdzapateriaedteam_dat',  ------ NOMBRE DEL ARCHIVO CON EXTENSI�N MDF (ARCHIVOS DE REGISTROS DE BD)
		FILENAME ='c:\edteam\bdzapateriaedteamdat.mdf', --- COLOCAR EL ARCHIVO CON EXTENSION MDF EN EL DIRECTORIO ESPECIFICADO
		SIZE = 10,       ------ DEFINIR EL TAMA�O DEL ARCHIVO
		MAXSIZE = 50,    ------ DEFINIR EL TAMA�O MAXIMO DE CRECIMIENTO DEL ARCHIVO
		FILEGROWTH = 5	 ------ DEFINIR CUANTO DEBE DE CRECER EL ARCHIVO, CADA VEZ QUE NECESITA CRECER
	)
LOG ON
	(
		NAME ='bdzapateriaedteam_log', ------ NOMBRE DEL ARCHIVO CON EXTENSI�N LOG (ARCHIVOS DE REGISTROS DE BD)
		FILENAME = 'c:\edteam\bdzapateriaedteamlog.ldf', --- COLOCAR EL ARVHIVO CON EXTENSION LDF EN EL DIRECTORIO ESPECIFICADO
		SIZE = 5MB, ------ DEFINIR EL TAMA�O DEL ARCHIVO
		MAXSIZE = 25, ------ DEFINIR EL TAMA�O MAXIMO DE CRECIMIENTO DEL ARCHIVO
		FILEGROWTH = 5MB ------ DEFINIR CUANTO DEBE DE CRECER EL ARCHIVO, CADA VEZ QUE NECESITA CRECER
	)
	
GO

USE bdzapateriaedteam					---- USAR LA BASE DE DATOS ESPECIFICADA


IF OBJECT_ID('tProducto') IS NOT NULL	---- COMPROBAR SI EXISTE EL NUMERO DE IDENTIFCACION DEL OBJETO DE LA TABLA OBLOGATORIO
	BEGIN								---- COMENZAR INSTRUCCION
		DROP TABLE tProducto			---- ELIMINAR TABLA EXISTENTE
	END									---- FINALIZAR INSTRUCCION
GO

CREATE TABLE tProducto
(
	id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,    ---- INDICAR LLAVE PRIMARIA Y CAMPO OBLIGATORIO
	nombre VARCHAR(60) NOT NULL,				  ---- CAMPO OBLIGATORIO
	presentacion VARCHAR(30),					  ---- CAMPO NO OBLIGATORIO
	valor NUMERIC(11,2) NOT NULL				  ---- CAMPO OBLIGATORIO
)


---- ALETRAR LA TABLA PRODUCTO Y RESTRIGIR QUE EL VALOR DEL PRODUCTO SEA MAYOR QUE 0
ALTER TABLE tProducto ADD CHECK(valor > 0);



IF OBJECT_ID('tCliente') IS NOT NULL	---- COMPROBAR SI EXISTE EL NUMERO DE IDENTIFCACION DEL OBJETO DE LA TABLA OBLOGATORIO
	BEGIN								---- COMENZAR INSTRUCCION
		DROP TABLE tCliente				---- ELIMINAR TABLA EXISTENTE
	END									---- FINALIZAR INSTRUCCION
GO


----- CREAR TABLA CLIENTE
CREATE TABLE tCliente
(
	id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,		-------	INDICAR LLAVE PRIMARIA Y CAMPO OBLIGATORIO
	identificacion VARCHAR(11) NOT NULL,			-------	CAMPO OBLIGATORIO
	nom_cliente VARCHAR(80) NOT NULL,				------- CAMPO OBLIGATORIO
	pais VARCHAR(20) NOT NULL						------- CAMPO OBLIGATORIO
);

----- ALTERAR LA TABLA CLIENTE Y RESTRINGIR A LA TABLA CLIENTE A SU CAMPO identificacion, QUE SU CAMPO SEA �NICO.
ALTER TABLE tCliente ADD CONSTRAINT UQ_identificacion UNIQUE (identificacion)



---- CREACION DE LA TABLA FACTURACION

IF OBJECT_ID('tFactura') IS NOT NULL    ---- COMPROBAR SI EXISTE EL NUMERO DE IDENTIFCACION DEL OBJETO DE LA TABLA OBLOGATORIO
	BEGIN								---- COMENZAR INSTRUCCION
		DROP TABLE tFactura				---- ELIMINAR TABLA EXISTENTE
	END									---- FINALIZAR INSTRUCCION
GO


----- CREAR TABLA FACTURA
CREATE TABLE tFactura
(
	id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,		-------	INDICAR LLAVE PRIMARIA Y CAMPO OBLIGATORIO
	id_cliente INT NOT NULL,						-------	CAMPO OBLIGATORIO
	impuesto INT NOT NULL,							-------	CAMPO OBLIGATORIO
	descuento NUMERIC(11,2) DEFAULT 0,				-------	CAMPO OBLIGATORIO
	total NUMERIC(11,2) NOT NULL,					-------	CAMPO OBLIGATORIO
	fecha DATE NOT NULL								-------	CAMPO OBLIGATORIO
);


----- ALTERAR TABLA FACTURA Y AGREGAR LLAVE FORANEA A SU CAMPO id_cliene 
ALTER TABLE tFactura ADD CONSTRAINT Fk_factura_cliente FOREIGN KEY (id_cliente) REFERENCES tCliente(id);


---- CREACION DE LA TABLA INVENTARIO

IF OBJECT_ID('tInventario') IS NOT NULL		---- COMPROBAR SI EXISTE EL NUMERO DE IDENTIFCACION DEL OBJETO DE LA TABLA OBLOGATORIO
	BEGIN									---- COMENZAR INSTRUCCION
		DROP TABLE tInventario				---- ELIMINAR TABLA EXISTENTE
	END										---- FINALIZAR INSTRUCCION
GO


----- CREAR TABLA INVENTARIO 
CREATE TABLE tInventario
(
	id INT PRIMARY KEY IDENTITY(1,1) NOT NULL,		-------	INDICAR LLAVE PRIMARIA Y CAMPO OBLIGATORIO
	id_factura INT NOT NULL,						-------	CAMPO OBLIGATORIO
	id_producto INT NOT NULL,						-------	CAMPO OBLIGATORIO
	tipo_movimiento CHAR(1) NOT NULL,				-------	CAMPO OBLIGATORIO
	cantidad INT NOT NULL							-------	CAMPO OBLIGATORIO
);

----- ALTERAR TABLA INVENTARIO Y AGREGAR LLAVE FORANEA A SUS CAMPOS id_factura REFRENTE A LA TABLA FACTURA
ALTER TABLE tInventario ADD CONSTRAINT Fk_inventario__factura FOREIGN KEY (id_factura) REFERENCES tFactura(id);

----- ALTERAR TABLA INVENTARIO Y AGREGAR LLAVE FORANEA A SUS CAMPOS id_producto REFERENTE A LA TABLA PRODUCTO
ALTER TABLE tInventario ADD CONSTRAINT Fk_inventario_producto FOREIGN KEY (id_producto) REFERENCES tProducto(id);

----- RESTRINCION A LA TABLA INVENTARIO AL CAMPO TIPO MOVIMIENTO: E = ENTRADA DE PRODUCTO, S = SALIDA DE PRODUCTO
ALTER TABLE tInventario ADD CHECK(tipo_movimiento IN('E', 'S'));

----- RESTRINCION A LA TABLA INVENTARIO QUE LA CANTIDAD SEA MAYOR QUE 0
ALTER TABLE tInventario ADD CHECK(cantidad > 0);



