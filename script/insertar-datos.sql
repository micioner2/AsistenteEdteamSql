
/*
	---	PARA INSERTAR LOS DATOS USÉ PROCEDIMIENTOS ALMACENADOS CON VALORES DE RETORNO BOOLEANOS
	--- PARA LAS CONSULTAS USE FUNCIONES CON PARAMETROS Y CREÉ UNA TABLA VISTA
	--- PARA INSERTAR LOS DATOS, LLAMÉ A EJECUTAR LOS PROCEDIMIENTOS ALAMACENADOS
*/

USE bdzapateriaedteam		----- USAR LA BASE DE DATOS
GO							----- FIN DE LA INSTRUCCION

CREATE PROCEDURE SP_insert_producto			------ CREAR PROCEDIMIENTO ALMACENADO PARA EL REGISTRO DE DATOS
	@nombre VARCHAR(60),					------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@presentacion VARCHAR(30),				------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@valor NUMERIC(11,2),					------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@r BIT OUT								------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE SALIDA
AS
	BEGIN TRANSACTION						------ COMENZAR TRANSACCION
		BEGIN TRY							------ COMENZAR MANEJO DE ERRORES MONITOREAR ERRORES
				INSERT INTO dbo.tProducto VALUES (@nombre,@presentacion,@valor)		----- INSERTAR DATOS A LA TABLA
			COMMIT SET @r= 1;				------ CONFIRMAR INSTRUCCION DEVOLVER CON EXITO EL PARAMETRO DE SALIDA (1)
		END TRY								------ FINALIZAR MANEJO DE ERRORES TRY
	BEGIN CATCH								------ COMENZAR EL MANEJO DE ERRORES Y ATRAPARLOS 
			ROLLBACK SET @r=0;				------ DESHACER LA INSTRUCCIÓN Y DEVOLVER EL PARAMETRO DE SALIDA (0)
	END CATCH								------ DEVOLVER LA TRANSACION Y SALIR DE LA INSTRUCCION 
GO											------ FINALIZAR SENTENCIA


SET ANSI_NULLS ON							----- NO DEVOLVER FILAS
GO											----- FINALIZAR SENTENCIA
SET QUOTED_IDENTIFIER ON					----- SEGUIR LAS REGLAS ISO
GO											----- FINALIZAR SENTENCIA



CREATE PROCEDURE SP_insert_cliente		------ CREAR PROCEDIMIENTO ALMACENADO PARA EL REGISTRO DE DATOS
	@identificacion VARCHAR(11),		------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@nom_cliente VARCHAR(60),			------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@pais VARCHAR(20),					------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@r BIT OUT							------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE SALIDA
AS	
	BEGIN TRANSACTION					------ COMENZAR TRANSACCION
		BEGIN TRY						------ COMENZAR MANEJO DE ERRORES MONITOREAR ERRORES
				INSERT INTO dbo.tCliente VALUES (@identificacion,@nom_cliente,@pais)	----- INSERTAR DATOS A LA TABLA
			COMMIT SET @r= 1;			------ CONFIRMAR INSTRUCCION DEVOLVER CON EXITO EL PARAMETRO DE SALIDA (1)
		END TRY							------ FINALIZAR MANEJO DE ERRORES TRY
	BEGIN CATCH							------ COMENZAR EL MANEJO DE ERRORES Y ATRAPARLOS 
			ROLLBACK SET @r=0;			------ DESHACER LA INSTRUCCIÓN Y DEVOLVER EL PARAMETRO DE SALIDA (0)
	END CATCH							------ DEVOLVER LA TRANSACION Y SALIR DE LA INSTRUCCION 						
GO										------ FINALIZAR SENTENCIA


SET ANSI_NULLS ON						----- NO DEVOLVER FILAS
GO										----- FINALIZAR SENTENCIA
SET QUOTED_IDENTIFIER ON				----- SEGUIR LAS REGLAS ISO
GO										----- FINALIZAR SENTENCIA



--- REGISTRO DE DATOS TABLA FACTURA
CREATE PROCEDURE SP_insert_factura		------ CREAR PROCEDIMIENTO ALMACENADO PARA EL REGISTRO DE DATOS
	@id_cliente INT,					------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@impuesto INT,						------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@descuento INT,						------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@total NUMERIC(11,2),				------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@fecha DATE,						------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@r BIT OUT							------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE SALIDA
AS
	BEGIN TRANSACTION					------ COMENZAR TRANSACCION
		BEGIN TRY						------ COMENZAR MANEJO DE ERRORES MONITOREAR ERRORES
				INSERT INTO dbo.tFactura (id_cliente,impuesto,descuento,total,fecha) VALUES (@id_cliente,@impuesto,@descuento,@total,@fecha)	----- INSERTAR DATOS A LA TABLA
			COMMIT SET @r= 1;			------ CONFIRMAR INSTRUCCION DEVOLVER CON EXITO EL PARAMETRO DE SALIDA (1)
		END TRY							---- FINALIZAR MANEJO DE ERRORES TRY
	BEGIN CATCH							------ COMENZAR EL MANEJO DE ERRORES Y ATRAPARLOS 
			ROLLBACK SET @r=0;			------ DESHACER LA INSTRUCCIÓN Y DEVOLVER EL PARAMETRO DE SALIDA (0)
	END CATCH							------ DEVOLVER LA TRANSACION Y SALIR DE LA INSTRUCCION
GO										------ FINALIZAR SENTENCIA

SET ANSI_NULLS ON						----- NO DEVOLVER FILAS
GO										----- FINALIZAR SENTENCIA
SET QUOTED_IDENTIFIER ON				----- SEGUIR LAS REGLAS ISO
GO										----- FINALIZAR SENTENCIA



--- REGISTRO DE DATOS TABLA INVENTARIO
CREATE PROCEDURE SP_insert_inventario		------ CREAR PROCEDIMIENTO ALMACENADO PARA EL REGISTRO DE DATOS
	@id_facutra	INT,						------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@id_producto INT,						------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@tipo_movimiento CHAR(1),				------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@cantidad INT,							------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE ENTRADA
	@r BIT OUT								------ DEFINIR EL TIPO DATO Y LONGITUD DEL PARAMETRO DE SALIDA
AS
	BEGIN TRANSACTION						------ COMENZAR TRANSACCION
		BEGIN TRY
				INSERT INTO dbo.tInventario (id_factura,id_producto,tipo_movimiento,cantidad) VALUES (@id_facutra,@id_producto,@tipo_movimiento,@cantidad) ----- INSERTAR DATOS A LA TABLA
			COMMIT SET @r= 1;				------ CONFIRMAR INSTRUCCION DEVOLVER CON EXITO EL PARAMETRO DE SALIDA (1)
		END TRY								------ FINALIZAR MANEJO DE ERRORES TRY
	BEGIN CATCH								------ COMENZAR EL MANEJO DE ERRORES Y ATRAPARLOS 
			ROLLBACK SET @r=0;				------ DESHACER LA INSTRUCCIÓN Y DEVOLVER EL PARAMETRO DE SALIDA (0)
	END CATCH
GO											------ FINALIZAR SENTENCIA

SET ANSI_NULLS ON							----- NO DEVOLVER FILAS
GO											----- FINALIZAR SENTENCIA
SET QUOTED_IDENTIFIER ON					----- SEGUIR LAS REGLAS ISO
GO											----- FINALIZAR SENTENCIA





CREATE FUNCTION PREGUNTA_1 (@id_cliente int)	----- CREAR UNA FUNCION CON PARAMETRO QUE DEVUELVE UNA CONSULTA
	RETURNS TABLE								------ ESPECIFICAR QUE DEVOLVERA UNA TABLA
		AS										------ ASIGNACION
												------ RETORNAR CONSULTA
			RETURN (SELECT C.nom_cliente, C.identificacion, F.impuesto, F.descuento, F.total FROM tCliente AS C INNER JOIN tFactura AS F ON F.id_cliente = C.id WHERE C.id=@id_cliente)
	GO											---- FINALIZAR INSTRUCCION



CREATE FUNCTION PREGUNTA_2 (@id_producto int)	----- CREAR UNA FUNCION CON PARAMETRO QUE DEVUELVE UNA CONSULTA
RETURNS TABLE									------ ESPECIFICAR QUE DEVOLVERA UNA TABLA
	AS											------ ASIGNACION
												------ RETORNAR CONSULTA
		RETURN (SELECT F.id, F.impuesto, F.descuento, F.total FROM tFactura AS F INNER JOIN tInventario AS I ON I.id_factura = F.id WHERE I.id_producto = @id_producto)
	GO											------ FINALIZAR INSTRUCCION


CREATE FUNCTION PREGUNTA_3 (@FECHA_INICIO DATE, @FECHA_FIN DATE) ----- CREAR UNA FUNCION CON PARAMETRO QUE DEVUELVE UNA CONSULTA
RETURNS TABLE								------ ESPECIFICAR QUE DEVOLVERA UNA TABLA
	AS										------ ASIGNACION
											------ RETORNAR CONSULTA
		RETURN (SELECT F.id, F.fecha, F.impuesto, F.descuento, F.total FROM tFactura AS F WHERE F.fecha BETWEEN @FECHA_INICIO AND @FECHA_FIN)
	GO											---- FINALIZAR INSTRUCCION



CREATE VIEW PREGUNTA_4 WITH ENCRYPTION   ---- CREAR UNA VISTA ENCRYPTADA
	AS
		---- SELECCIONAR CONSULTA
		SELECT C.id, C.nom_cliente, C.identificacion , COUNT(C.id) AS CANTIDAD_COMPRAS FROM tFactura AS F LEFT JOIN tCliente AS C ON C.id = F.id_cliente  GROUP BY C.id, C.nom_cliente, C.identificacion
	GO	----FINALIZAR INSTRUCCION



	
--- PRODUCTO


EXECUTE SP_insert_producto 'ZAPATILLAS ADIDAS','TALLA - 32 MODELO SPORT - CLASIC',250,1			----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_producto 'ZAPATILLAS NIKE','TALLA - 44 MODELO NEWDAY - URBANO',320,1			----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_producto 'ZAPATOS DE VESTIR CAT','TALLA - 43 MODELO URBANO - 2020',150,1		----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_producto 'ZAPATOS DE VESTIR BATTA','TALLA - 36 MODELO CLASIC - CLARK',120,1	----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_producto 'ZANDALIDAS BATTA','TALLA - 42 MODELO FREE - CLASIC',180,1			----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_producto 'BOTAS CAT','TALLA - 40 MODELO TODO TERRENO - SPORT',310,1			----- EJECUTAR EL PROCEDIMIENTO ALMACENADO



----CLIENTE

EXECUTE SP_insert_cliente '44545465','Juan Perez','PERU',1									----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_cliente '22222222','Mario Pintado','PERU',1								----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_cliente '15544015421','Mark Clever Joirsnt Flex','INGLATERRA',1			----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_cliente '0147665210','Diana Palomino Agurto','BOLIVIA',1					----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_cliente '4102221145','Alex Ubillus Mazno','COLOMBIA',1					----- EJECUTAR EL PROCEDIMIENTO ALMACENADO




---1 COMPRA

EXECUTE SP_insert_factura 1,18,0,590,'02/06/2020',1				----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 1,1,'E',2,1						----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
---2 COMPRA
EXECUTE SP_insert_factura 2,18,0,377.6,'10/03/2020',1			----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 2,2,'E',1,1						----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
---3 COMPRA
EXECUTE SP_insert_factura 1,18,0,1735.6,'08/02/2020',1			----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 3,3,'E',5,1						----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 3,4,'E',6,1						----- EJECUTAR EL PROCEDIMIENTO ALMACENADO

---4 COMPRA
EXECUTE SP_insert_factura 4,18,200,2000.6,'10/05/2020',1		----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 4,5,'E',5,1						----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 4,6,'E',2,1						----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 4,4,'E',5,1						----- EJECUTAR EL PROCEDIMIENTO ALMACENADO



---5 COMPRA
EXECUTE SP_insert_factura 5,18,30,1755,'22/03/2020',1	----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 5,6,'E',5,1				----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 5,3,'E',6,1				----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 5,5,'E',2,1				----- EJECUTAR EL PROCEDIMIENTO ALMACENADO


	---6 COMPRA
EXECUTE SP_insert_factura 4,18,30,1500,'06/02/2020',1	----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 6,2,'E',5,1				----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 6,1,'E',6,1				----- EJECUTAR EL PROCEDIMIENTO ALMACENADO
EXECUTE SP_insert_inventario 6,3,'E',2,1				----- EJECUTAR EL PROCEDIMIENTO ALMACENADO



